<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="DivisiBill.Views.LineItemsPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:model="clr-namespace:DivisiBill.Models"
    xmlns:services="clr-namespace:DivisiBill.Services"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:vm="clr-namespace:DivisiBill.ViewModels"
    Title="Items"
    x:DataType="vm:MealViewModel"
    BindingContext="{DynamicResource MealViewModel}"
    Shell.FlyoutBehavior="Flyout">
    <!--#region ToolBar-->
    <ContentPage.ToolbarItems>
        <ToolbarItem IconImageSource="{StaticResource GlyphFilterOn}" Command="{Binding FilterItemsFromLineItemCommand}"/>
        <ToolbarItem IconImageSource="{StaticResource GlyphAdd}" Command="{Binding AddLineItemCommand}"/>
        <ToolbarItem IconImageSource="{StaticResource GlyphDel}" Command="{Binding DeleteLineItemCommand}"/>
        <ToolbarItem Text="Clear Filter"         Order="Secondary" Command="{Binding ClearFilteringCommand}"/>
        <ToolbarItem Text="Duplicate"            Order="Secondary" Command="{Binding DuplicateLineItemCommand}"/>
        <ToolbarItem Text="Send Mail"            Order="Secondary" Command="{Binding MailCommand}"/>
        <ToolbarItem Text="Payments"             Order="Secondary" Command="{Binding DisplayPaymentsCommand}"/>
        <ToolbarItem Text="Clear Sharing"        Order="Secondary" Command="{Binding ChangeSharingCommand}" CommandParameter="Clear"/>
        <ToolbarItem Text="Share Equally"        Order="Secondary" Command="{Binding ChangeSharingCommand}" CommandParameter="Even"/>
        <ToolbarItem Text="Share Proportionally" Order="Secondary" Command="{Binding ChangeSharingCommand}" CommandParameter="Proportional"/>
        <ToolbarItem Text="Change Sharing"       Order="Secondary" Command="{Binding ChangeSharingCommand}" CommandParameter="Cycle"/>
        <ToolbarItem Text="Go to End"            Order="Secondary" Command="{Binding ScrollItemsCommand}" CommandParameter="End" IsEnabled="{Binding IsLineItemSwipeUpAllowed}"/>
        <ToolbarItem Text="Go to Start"          Order="Secondary" Command="{Binding ScrollItemsCommand}" CommandParameter="Start" IsEnabled="{Binding IsLineItemSwipeDownAllowed}"/>
    </ContentPage.ToolbarItems>
    <!--#endregion-->
    <ContentPage.Resources>
        <ResourceDictionary>
            <Style x:Key="labelStyle" TargetType="Label">
                <Setter Property="FontSize" Value="Large" />
                <Setter Property="HorizontalTextAlignment" Value="End" />
                <Setter Property="VerticalTextAlignment" Value="Center" />
                <Setter Property="Padding" Value="0" />
            </Style>
            <Style
                x:Key="UnequalLabelStyle"
                BasedOn="{StaticResource labelStyle}"
                TargetType="Label">
                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Yellow300Accent}, Dark={StaticResource Yellow100Accent}}" />
            </Style>
            <Style
                x:Key="ValidLabelStyle"
                BasedOn="{StaticResource labelStyle}"
                TargetType="Label">
                <Setter Property="BackgroundColor" Value="Transparent" />
            </Style>
            <toolkit:VariableMultiValueConverter x:Key="All" ConditionType="All" />
        </ResourceDictionary>
        <!--  TODO MAUI DETOUR SwipeView bug means Add and scroll will fail on Windows until https://github.com/dotnet/maui/issues/18530 and 8870 are fixed  -->
        <DataTemplate x:Key="WithSwipe" x:DataType="model:LineItem">
            <Grid ColumnDefinitions="35,*,80,*,30">
                <!--#region Item information-->
                <!--#region Swipe Items-->
                <SwipeView Grid.ColumnSpan="5">
                    <SwipeView.RightItems>
                        <SwipeItems Mode="Execute">
                            <SwipeItem
                                BackgroundColor="Red"
                                Command="{Binding ChangeSharingCommand, Source={RelativeSource AncestorType={x:Type vm:MealViewModel}}, x:DataType=vm:MealViewModel}"
                                CommandParameter="{Binding}"
                                IconImageSource="{StaticResource GlyphDel}" />
                        </SwipeItems>
                    </SwipeView.RightItems>
                    <!--#endregion-->
                    <Grid
                        Margin="10,0,10,0"
                        ColumnDefinitions="20,*,Auto,20"
                        IsVisible="{Binding IsSharedByFilter}"
                        RowDefinitions="Auto">
                        <Grid.Resources>
                            <Style x:Key="SignedLabelStyle" TargetType="Label">
                                <Setter Property="VisualStateManager.VisualStateGroups">
                                    <VisualStateGroupList>
                                        <VisualStateGroup>
                                            <VisualState x:Name="Negative">
                                                <VisualState.StateTriggers>
                                                    <CompareStateTrigger Property="{Binding Amount,Converter={StaticResource IsNegative}}" Value="True" />
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="TextColor" Value="{StaticResource NegativeNumber}" />
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Default">
                                                <VisualState.StateTriggers>
                                                    <CompareStateTrigger Property="{Binding Amount,Converter={StaticResource IsNegative}}" Value="False" />
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateGroupList>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Label
                            Grid.Column="0"
                            FontSize="15"
                            HorizontalOptions="Center"
                            Text="{Binding Sharers}"
                            VerticalOptions="Center" />

                        <Label
                            Grid.Column="1"
                            FontSize="Large"
                            LineBreakMode="TailTruncation"
                            Text="{Binding ItemName}" />

                        <Label
                            x:Name="amountLabel"
                            Grid.Column="2"
                            FontSize="Large"
                            HorizontalTextAlignment="End"
                            IsEnabled="True"
                            LineBreakMode="NoWrap"
                            Style="{StaticResource SignedLabelStyle}"
                            Text="{Binding Path=AmountText}" />

                        <Label
                            Grid.Column="3"
                            FontSize="15"
                            IsVisible="{Binding Comped}"
                            Text="â˜º"
                            VerticalOptions="Center" />
                    </Grid>
                </SwipeView>
                <!--#endregion-->
                <!--#region overlay buttons-->
                <!--  Tap to toggle sharing, spans the margin and does not cause an item to be selected  -->
                <Rectangle Grid.Column="0">
                    <Rectangle.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ChangeSharingCommand, Source={RelativeSource AncestorType={x:Type vm:MealViewModel}}, x:DataType=vm:MealViewModel}" CommandParameter="{Binding}" />
                    </Rectangle.GestureRecognizers>
                </Rectangle>
                <!--  Tap to toggle select or double tap to display payments  -->
                <Rectangle Grid.Column="1" Grid.ColumnSpan="3">
                    <Rectangle.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ToggleSelectLineItemCommand, Source={RelativeSource AncestorType={x:Type vm:MealViewModel}}, x:DataType=vm:MealViewModel}" CommandParameter="{Binding}" />
                        <TapGestureRecognizer
                            Command="{Binding DisplayPaymentsCommand, Source={RelativeSource AncestorType={x:Type vm:MealViewModel}}, x:DataType=vm:MealViewModel}"
                            CommandParameter="{Binding SelectedCost, Source={RelativeSource AncestorType={x:Type vm:MealViewModel}}, x:DataType=vm:MealViewModel}"
                            NumberOfTapsRequired="2" />
                    </Rectangle.GestureRecognizers>
                </Rectangle>
                <!--  Tap to toggle Comped value, spans the margin and does not cause an item to be selected  -->
                <Rectangle Grid.Column="4">
                    <Rectangle.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ChangeCompCommand, Source={RelativeSource AncestorType={x:Type vm:MealViewModel}}, x:DataType=vm:MealViewModel}" CommandParameter="{Binding}" />
                    </Rectangle.GestureRecognizers>
                </Rectangle>
                <!--#endregion-->
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="NoSwipe" x:DataType="model:LineItem">
            <Grid ColumnDefinitions="35,*,80,*,30">
                <Grid.Resources>
                <Style x:Key="SignedLabelStyle" TargetType="Label">
                    <Setter Property="VisualStateManager.VisualStateGroups">
                        <VisualStateGroupList>
                            <VisualStateGroup>
                                <VisualState x:Name="Negative">
                                    <VisualState.StateTriggers>
                                            <CompareStateTrigger Property="{Binding Amount,Converter={StaticResource IsNegative}}" Value="True" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Property="TextColor" Value="{StaticResource NegativeNumber}" />
                                    </VisualState.Setters>
                                </VisualState>
                                    <VisualState x:Name="Default">
                                        <VisualState.StateTriggers>
                                            <CompareStateTrigger Property="{Binding Amount,Converter={StaticResource IsNegative}}" Value="False" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                        </VisualStateGroupList>
                    </Setter>
                </Style>
                </Grid.Resources>
                <!--#region Item information-->
                <Grid
                    Grid.ColumnSpan="5"
                    Margin="10,0,10,0"
                    ColumnDefinitions="20,*,Auto,20"
                    IsVisible="{Binding IsSharedByFilter}"
                    RowDefinitions="Auto">
                    <Label
                        Grid.Column="0"
                        FontSize="15"
                        HorizontalOptions="Center"
                        Text="{Binding Sharers}"
                        VerticalOptions="Center" />

                    <Label
                        Grid.Column="1"
                        FontSize="Large"
                        LineBreakMode="TailTruncation"
                        Text="{Binding ItemName}" />

                    <Label
                        x:Name="amountLabel"
                        Grid.Column="2"
                        FontSize="Large"
                        HorizontalTextAlignment="End"
                        IsEnabled="True"
                        LineBreakMode="NoWrap"
                        Style="{StaticResource SignedLabelStyle}"
                        Text="{Binding Path=AmountText}" />

                    <Label
                        Grid.Column="3"
                        FontSize="15"
                        IsVisible="{Binding Comped}"
                        Text="â˜º"
                        VerticalOptions="Center" />
                </Grid>
                <!--#endregion-->
                <!--#region overlay buttons-->
                <!--  Tap to toggle sharing, spans the margin and does not cause an item to be selected  -->
                <Rectangle Grid.Column="0">
                    <Rectangle.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ChangeSharingCommand, Source={RelativeSource AncestorType={x:Type vm:MealViewModel}}, x:DataType=vm:MealViewModel}" CommandParameter="{Binding}" />
                    </Rectangle.GestureRecognizers>
                </Rectangle>
                <!--  Tap to toggle select or double tap to display payments  -->
                <!--  Strangely, if this button is replaced with a Rectangle it doesn't work correctly because the event order changes, at least through .NET 9  -->
                <Button
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    BackgroundColor="Transparent">
                    <Button.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ToggleSelectLineItemCommand, Source={RelativeSource AncestorType={x:Type vm:MealViewModel}}, x:DataType=vm:MealViewModel}" CommandParameter="{Binding}" />
                        <TapGestureRecognizer
                            Command="{Binding DisplayPaymentsCommand, Source={RelativeSource AncestorType={x:Type vm:MealViewModel}}, x:DataType=vm:MealViewModel}"
                            CommandParameter="{Binding SelectedCost, Source={RelativeSource AncestorType={x:Type vm:MealViewModel}}, x:DataType=vm:MealViewModel}"
                            NumberOfTapsRequired="2" />
                    </Button.GestureRecognizers>
                </Button>
                <!--  Tap to toggle Comped value, spans the margin and does not cause an item to be selected  -->
                <Rectangle Grid.Column="4">
                    <Rectangle.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ChangeCompCommand, Source={RelativeSource AncestorType={x:Type vm:MealViewModel}}, x:DataType=vm:MealViewModel}" CommandParameter="{Binding}" />
                    </Rectangle.GestureRecognizers>
                </Rectangle>
                <!--#endregion-->
                <!--#region Context Menu to Replace Swipe-->
                <FlyoutBase.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem
                            Command="{Binding DeleteLineItemCommand, Source={RelativeSource AncestorType={x:Type vm:MealViewModel}}, x:DataType=vm:MealViewModel}"
                            CommandParameter="{Binding}"
                            Text="Delete" />
                    </MenuFlyout>
                </FlyoutBase.ContextFlyout>
                <!--#endregion-->
            </Grid>
        </DataTemplate>
    </ContentPage.Resources>
    <services:ColumnLayout>
        <!--#region Page Switch Shortcut-->
        <services:ColumnLayout.GestureRecognizers>
            <!--  Swipes are intercepted by the CollectionView below, so these take effect only outside that view  -->
            <SwipeGestureRecognizer Command="{Binding GoToTotalsCommand}" Direction="Left" />
        </services:ColumnLayout.GestureRecognizers>
        <!--#endregion-->
        <!--#region Venue Name Heading-->
        <Border
            Margin="5"
            Padding="5"
            Stroke="{AppThemeBinding Light={StaticResource Gray900},
                                     Dark={StaticResource White}}">
            <Border.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding PushPropertiesCommand}" />
                <TapGestureRecognizer
                    Buttons="Secondary"
                    Command="{Binding PushVenueListCommand}"
                    NumberOfTapsRequired="1" />
                <TapGestureRecognizer Command="{Binding PushVenueListCommand}" NumberOfTapsRequired="2" />
                <SwipeGestureRecognizer Command="{Binding GoToTotalsCommand}" Direction="Left" />
            </Border.GestureRecognizers>
            <Label
                FontSize="Title"
                HorizontalOptions="Center"
                Text="{Binding VenueName}" />
        </Border>
        <!--#endregion-->
        <!--#region Filter Information-->
        <Label
            FontSize="Title"
            HorizontalOptions="Center"
            IsVisible="{Binding IsFiltered}">
            <Label.FormattedText>
                <FormattedString>
                    <FormattedString.Spans>
                        <Span Text="Shares for " />
                        <Span Text="{Binding FilteredSharerName}" />
                    </FormattedString.Spans>
                </FormattedString>
            </Label.FormattedText>
        </Label>
        <!--#endregion-->
        <!--#region List of Items in CollectionView-->
        <CollectionView
            x:Name="LineItemsListView"
            EmptyView="No items defined"
            ItemSizingStrategy="MeasureAllItems"
            ItemTemplate="{OnPlatform Default={StaticResource WithSwipe},
                                      WinUI={StaticResource NoSwipe}}"
            ItemsSource="{Binding LineItems}"
            Scrolled="OnCollectionViewScrolled"
            SelectedItem="{Binding SelectedLineItem, Mode=TwoWay}"
            SelectionChanged="OnItemSelected"
            SelectionMode="Single">
            <!--#region Page Switch, List Scroll and Deselect All Shortcuts-->
            <CollectionView.GestureRecognizers>
                <SwipeGestureRecognizer
                    Command="{Binding ScrollItemsCommand}"
                    CommandParameter="Up"
                    Direction="Up" />
                <SwipeGestureRecognizer
                    Command="{Binding ScrollItemsCommand}"
                    CommandParameter="Down"
                    Direction="Down" />
                <SwipeGestureRecognizer Command="{Binding GoToTotalsCommand}" Direction="Left" />
                <TapGestureRecognizer Command="{Binding DeselectAllLineItemsCommand}" />
                <TapGestureRecognizer
                    Command="{Binding DisplayPaymentsCommand}"
                    CommandParameter="{Binding SelectedCost}"
                    NumberOfTapsRequired="2" />
            </CollectionView.GestureRecognizers>
            <!--#endregion-->
        </CollectionView>
        <!--#region Scroll Up/Down-->
        <Button
            services:ColumnLayout.SameRow="True"
            Command="{Binding ScrollItemsCommand}"
            IsVisible="{Binding IsLineItemSwipeDownAllowed}"
            Style="{StaticResource ScrollUpButtonStyle}" />
        <Button
            services:ColumnLayout.SameRow="True"
            Command="{Binding ScrollItemsCommand}"
            IsVisible="{Binding IsLineItemSwipeUpAllowed}"
            Style="{StaticResource ScrollDownButtonStyle}" />
        <!--#endregion-->
        <!--#endregion-->
        <!--#region Hint-->
        <Border IsVisible="{Binding ShowLineItemsHint}" Style="{StaticResource HintStyle}">
            <VerticalStackLayout Padding="5">
                <Label
                    FontSize="Large"
                    HorizontalOptions="Center"
                    Text="Swipe items or page" />
                <Label
                    FontSize="Large"
                    HorizontalOptions="Center"
                    Text="Double tap changes Title" />
                <Label
                    FontSize="Large"
                    HorizontalOptions="Center"
                    Text="See Help for more info" />
                <HorizontalStackLayout HorizontalOptions="Center">
                    <CheckBox IsChecked="{Binding ShowLineItemsHint, Converter={StaticResource Not}}" />
                    <Label Text="Hide this hint" VerticalOptions="Center" />
                </HorizontalStackLayout>
            </VerticalStackLayout>
        </Border>
        <!--#endregion-->
        <!--#region Undelete-->
        <HorizontalStackLayout
            Margin="0,0,0,5"
            HorizontalOptions="Center"
            Spacing="10">
            <Button
                Command="{Binding UndeleteLineItemCommand}"
                IsVisible="{Binding IsAnyDeletedLineItem}"
                Text="UnDelete" />
            <Button
                Command="{Binding UndeleteAllLineItemsCommand, Source={RelativeSource AncestorType={x:Type vm:MealViewModel}}, x:DataType=vm:MealViewModel}"
                IsVisible="{Binding IsManyDeletedLineItems}"
                Text="UnDelete All" />
        </HorizontalStackLayout>
        <!--#endregion-->
        <!--#region Subtotal Block-->
        <!--  This is the block of numbers at the bottom of the page containing a SubTotal and any nonzero taxable coupon amount  -->
        <Border
            x:Name="totalsContainer"
            Margin="5"
            Padding="5"
            Stroke="{AppThemeBinding Light={StaticResource Gray900},
                                     Dark={StaticResource White}}">
            <Grid
                x:DataType="vm:MealViewModel"
                ColumnDefinitions="*,Auto"
                ColumnSpacing="0"
                RowDefinitions="Auto, Auto"
                RowSpacing="0">
                <Grid.GestureRecognizers>
                    <SwipeGestureRecognizer Command="{Binding GoToTotalsCommand}" Direction="Left" />
                    <TapGestureRecognizer Command="{Binding PushPropertiesCommand}" />
                </Grid.GestureRecognizers>
                <!--#region Subtotal (Overall or Individual)-->
                <Label
                    Grid.Row="0"
                    FontSize="Large"
                    IsVisible="{Binding IsFiltered, Converter={StaticResource Not}}"
                    LineBreakMode="TailTruncation"
                    Text="Bill Subtotal" />
                <Label
                    Grid.Row="0"
                    Grid.Column="1"
                    FontSize="Large"
                    HorizontalOptions="End"
                    IsVisible="{Binding IsFiltered, Converter={StaticResource Not}}"
                    Text="{Binding SubTotal, StringFormat='{0:C}'}">
                    <Label.Behaviors>
                        <services:CurrencyLabelBehavior
                            EqualValue="{Binding ScannedSubTotal}"
                            TestEquality="{Binding ScannedSubTotal, Converter={StaticResource IsNonZero}}"
                            UnequalStyle="{StaticResource UnequalLabelStyle}"
                            ValidStyle="{StaticResource ValidLabelStyle}" />
                    </Label.Behaviors>
                </Label>
                <Label
                    Grid.Row="0"
                    FontSize="Large"
                    IsVisible="{Binding IsFiltered}"
                    LineBreakMode="TailTruncation"
                    Text="Person Subtotal" />
                <Label
                    Grid.Row="0"
                    Grid.Column="1"
                    FontSize="Large"
                    HorizontalOptions="End"
                    IsVisible="{Binding IsFiltered}"
                    Text="{Binding FilteredSubTotal, StringFormat='{0:C}'}" />
                <!--#endregion-->
                <!--#region Post Tax Coupon (overall or individual)-->
                <Label
                    Grid.Row="1"
                    FontSize="Large"
                    LineBreakMode="TailTruncation"
                    Text="Discount After Tax">
                    <Label.IsVisible>
                        <MultiBinding Converter="{StaticResource All}">
                            <Binding Converter="{StaticResource IsNonZero}" Path="CouponAmountAfterTax" />
                            <Binding Converter="{StaticResource Not}" Path="IsFiltered" />
                        </MultiBinding>
                    </Label.IsVisible>
                </Label>
                <Label
                    Grid.Row="1"
                    Grid.Column="1"
                    FontSize="Large"
                    HorizontalOptions="End"
                    Style="{StaticResource RedLabelTextStyle}"
                    Text="{Binding CouponAmountAfterTax, StringFormat='{0:C}'}">
                    <Label.IsVisible>
                        <MultiBinding Converter="{StaticResource All}">
                            <Binding Converter="{StaticResource IsNonZero}" Path="CouponAmountAfterTax" />
                            <Binding Converter="{StaticResource Not}" Path="IsFiltered" />
                        </MultiBinding>
                    </Label.IsVisible>
                </Label>
                <Label
                    Grid.Row="1"
                    FontSize="Large"
                    LineBreakMode="TailTruncation"
                    Text="Discount After Tax">
                    <Label.IsVisible>
                        <MultiBinding Converter="{StaticResource All}">
                            <Binding Converter="{StaticResource IsNonZero}" Path="FilteredCouponAmountAfterTax" />
                            <Binding Path="IsFiltered" />
                        </MultiBinding>
                    </Label.IsVisible>
                </Label>
                <Label
                    Grid.Row="1"
                    Grid.Column="1"
                    FontSize="Large"
                    HorizontalOptions="End"
                    Style="{StaticResource RedLabelTextStyle}"
                    Text="{Binding FilteredCouponAmountAfterTax, StringFormat='{0:C}'}">
                    <Label.IsVisible>
                        <MultiBinding Converter="{StaticResource All}">
                            <Binding Converter="{StaticResource IsNonZero}" Path="FilteredCouponAmountAfterTax" />
                            <Binding Path="IsFiltered" />
                        </MultiBinding>
                    </Label.IsVisible>
                </Label>
                <!--#endregion-->
            </Grid>
        </Border>
        <!--#endregion-->
        <!--#region Shares Count Buttons-->
        <!--  The number of shares held by the selected person  -->
        <VerticalStackLayout
            x:Name="SharesCountContainer"
            Margin="0,0,0,5"
            IsVisible="False">
            <Label
                x:Name="SharesCountHeader"
                FontSize="Large"
                HorizontalOptions="Center" />
            <HorizontalStackLayout HorizontalOptions="Center">
                <HorizontalStackLayout.Resources>
                    <Style TargetType="Button">
                        <Setter Property="WidthRequest" Value="30" />
                        <Setter Property="BorderWidth" Value="2" />
                        <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
                        <Setter Property="Padding" Value="1" />
                        <Setter Property="BackgroundColor" Value="Transparent" />
                        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
                    </Style>
                </HorizontalStackLayout.Resources>
                <Button Clicked="OnSharesCountButtonClicked" Text="0" />
                <Button Clicked="OnSharesCountButtonClicked" Text="1" />
                <Button Clicked="OnSharesCountButtonClicked" Text="2" />
                <Button Clicked="OnSharesCountButtonClicked" Text="3" />
                <Button Clicked="OnSharesCountButtonClicked" Text="4" />
                <Button Clicked="OnSharesCountButtonClicked" Text="5" />
                <Button Clicked="OnSharesCountButtonClicked" Text="6" />
                <Button Clicked="OnSharesCountButtonClicked" Text="7" />
                <Button Clicked="OnSharesCountButtonClicked" Text="8" />
                <Button Clicked="OnSharesCountButtonClicked" Text="9" />
            </HorizontalStackLayout>
        </VerticalStackLayout>
        <!--#endregion-->
        <!--#region Sharer Buttons-->
        <!--  The initial letters of the names of each sharer inside buttons  -->
        <HorizontalStackLayout
            x:Name="SharesContainer"
            Margin="5,0,5,0"
            HeightRequest="40"
            IsVisible="false"
            Spacing="2">
            <HorizontalStackLayout.Resources>
                <Style TargetType="Button">
                    <Setter Property="WidthRequest" Value="30" />
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Contrast}, Dark={StaticResource DarkPrimary}}" />
                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
                    <Setter Property="BorderColor" Value="Red" />
                    <Setter Property="BorderWidth" Value="1" />
                    <Setter Property="IsVisible" Value="False" />
                    <Setter Property="Text" Value="b" />
                </Style>
            </HorizontalStackLayout.Resources>
            <Button Pressed="OnSharesBtnPressed" Released="OnSharesBtnReleased" />
            <Button Pressed="OnSharesBtnPressed" Released="OnSharesBtnReleased" />
            <Button Pressed="OnSharesBtnPressed" Released="OnSharesBtnReleased" />
            <Button Pressed="OnSharesBtnPressed" Released="OnSharesBtnReleased" />
            <Button Pressed="OnSharesBtnPressed" Released="OnSharesBtnReleased" />
            <Button Pressed="OnSharesBtnPressed" Released="OnSharesBtnReleased" />
            <Button Pressed="OnSharesBtnPressed" Released="OnSharesBtnReleased" />
            <Button Pressed="OnSharesBtnPressed" Released="OnSharesBtnReleased" />
            <Button Pressed="OnSharesBtnPressed" Released="OnSharesBtnReleased" />
            <Button Pressed="OnSharesBtnPressed" Released="OnSharesBtnReleased" />
        </HorizontalStackLayout>
        <!--#endregion-->
        <!--#region Data entry area-->
        <Grid
            x:Name="ItemEntryContainer"
            Margin="12,0,12,0"
            ColumnDefinitions="2*,1*"
            IsVisible="False"
            RowDefinitions="60">
            <Entry
                x:Name="SelectedNameEntry"
                toolkit:SetFocusOnEntryCompletedBehavior.NextElement="{x:Reference SelectedAmountEntry}"
                Placeholder="Name"
                ReturnCommand="{Binding UnloadLineItemNameStringCommand}"
                ReturnType="Next"
                Text="{Binding LineItemNameString}"
                VerticalOptions="Center">
                <Entry.Behaviors>
                    <services:UserStoppedTypingBehavior Command="{Binding UnloadLineItemNameStringCommand}" StoppedTypingTimeThreshold="{Static vm:PropertiesViewModel.StoppedTypingTimeThreshold}" />
                </Entry.Behaviors>
            </Entry>
            <Entry
                x:Name="SelectedAmountEntry"
                Grid.Column="1"
                FontSize="Large"
                HorizontalTextAlignment="End"
                Keyboard="Numeric"
                Placeholder="Value"
                ReturnCommand="{Binding CompletedLineItemAmountStringCommand}"
                ReturnType="Done"
                Text="{Binding LineItemAmountString}">
                <Entry.Behaviors>
                    <services:CurrencyValidationBehavior
                        InvalidStyle="{StaticResource InvalidEntryStyle}"
                        IsValid="{Binding IsValidLineItemAmountString}"
                        MaximumValue="999999.99"
                        MinimumValue="-999999.99"
                        ValidStyle="{StaticResource ValidEntryStyle}" />
                    <services:UserStoppedTypingBehavior Command="{Binding UnloadLineItemAmountStringCommand}" StoppedTypingTimeThreshold="{Static vm:PropertiesViewModel.StoppedTypingTimeThreshold}" />
                </Entry.Behaviors>
            </Entry>
        </Grid>
        <!--#endregion-->
    </services:ColumnLayout>
</ContentPage>