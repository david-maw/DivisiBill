<Project Sdk="Microsoft.NET.Sdk">

   <PropertyGroup>
      <TargetFrameworks>net9.0-android</TargetFrameworks>
      <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net9.0-windows10.0.19041.0</TargetFrameworks>
      <OutputType>Exe</OutputType>
      <!--See https://github.com/dotnet/runtime/issues/109724-->
      <_DefaultValueAttributeSupport>true</_DefaultValueAttributeSupport>
      <RootNamespace>DivisiBill</RootNamespace>
      <UseMaui>true</UseMaui>
      <SingleProject>true</SingleProject>
      <ImplicitUsings>disable</ImplicitUsings>
      <MauiStrictXamlCompilation>true</MauiStrictXamlCompilation>
      <MauiEnableXamlCBindingWithSourceCompilation>true</MauiEnableXamlCBindingWithSourceCompilation>
     <LangVersion>preview</LangVersion> <!--In order to use partial properties via Community Toolkit-->
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <NoWarn>NU1608;MVVMTK0045</NoWarn>
     <!--NU1608 Because Plugin.InAppBilling 8.x triggers it-->
     <!--MVVMTK0045 because building tests triggers it and it's unnecessary-->

     <!-- Display name -->
      <ApplicationTitle>DivisiBill</ApplicationTitle>
 
      <!-- App Identifier -->
      <ApplicationId>com.autoplus.divisibill</ApplicationId>
      <ApplicationIdGuid>852FA570-F1CD-41BE-A828-5C1DE6ED088F</ApplicationIdGuid>
 
      <!-- Versions -->
      <ApplicationDisplayVersion>6.2.16</ApplicationDisplayVersion>
      <ApplicationVersion>300</ApplicationVersion>

      <ApplicationVersion Condition="'$(DIVISIBILL_VERSION_INCREMENT)' != ''">$([MSBuild]::Add($(ApplicationVersion), $(DIVISIBILL_VERSION_INCREMENT)))</ApplicationVersion>

      <AssemblyVersion>$(ApplicationDisplayVersion).$(ApplicationVersion)</AssemblyVersion>
 
      <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">14.2</SupportedOSPlatformVersion>
      <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">14.0</SupportedOSPlatformVersion>
      <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">28.0</SupportedOSPlatformVersion>
      <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
      <TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
      <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
      <DefaultLanguage>en-us</DefaultLanguage>
      <Configurations>Debug;Release;ReleaseTest</Configurations>
   </PropertyGroup>

   <PropertyGroup>
     <!--Enables 'dotnet run' (along with "commandName": "Project" in launchsettings.json)-->
     <WindowsPackageType>None</WindowsPackageType>
   </PropertyGroup>

  <!--Turn on Android AOT compilation to Speed Up initialization-->
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-android|AnyCPU'">
    <RunAOTCompilation>True</RunAOTCompilation>
  </PropertyGroup>

  <ItemGroup>
      <!-- App Icon, see https://learn.microsoft.com/en-us/dotnet/core/tools/sdk-errors/netsdk1005 -->
     <MauiIcon Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) != 'android'" Update="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="Red" />
     <MauiIcon Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'" Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="Red" />

     <!-- Splash Screen -->
      <MauiSplashScreen Include="Resources\Splash\appiconfg.svg" Color="Red" />

      <!-- Images -->
      <MauiImage Include="Resources\Images\*" />
      <MauiImage Update="Resources\Images\dotnet.svg" BaseSize="200,200" />

      <!-- Custom Fonts -->
      <MauiFont Include="Resources\Fonts\*" />

      <!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
      <MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
      <!-- Raw Web site Assets for DivisiBill with a "help" prefix to prevent name collisions with any other raw resources -->
      <MauiAsset Include="..\web\divisibill\**" LogicalName="help\%(RecursiveDir)%(Filename)%(Extension)" />
      <!-- Don't need the MD files -->
      <MauiAsset Remove="..\web\divisibill\**\*.md" />
   </ItemGroup>

   <ItemGroup>
     <MauiAsset Remove="Resources\Raw\md-template.html" />
     <MauiCss Remove="Resources\Raw\md-styles.css" />
   </ItemGroup>

   <ItemGroup>
     <None Remove="Release Notes.html" />
     <None Remove="Resources\Images\dotnet.svg" />
     <None Remove="Resources\Splash\appiconfg.svg" />
   </ItemGroup>

   <ItemGroup>
     <MauiAsset Include="Release Notes.html" />
   </ItemGroup>

   <ItemGroup>
      <PackageReference Include="CommunityToolkit.Diagnostics" Version="8.4.0" />
      <PackageReference Include="CommunityToolkit.Maui.Camera" Version="2.0.1" />
      <PackageReference Include="CommunityToolkit.Maui.Maps" Version="3.0.1" />
      <PackageReference Include="epj.RouteGenerator" Version="1.0.4" />
      <PackageReference Include="Microsoft.Maui.Controls" Version="9.0.30" />
      <PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="9.0.30" />
      <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="9.0.1" />
      <PackageReference Include="CommunityToolkit.Common" Version="8.4.0" />
      <PackageReference Include="CommunityToolkit.Maui" Version="11.0.0" />
      <PackageReference Include="CommunityToolkit.Mvvm" Version="8.4.0" />
      <PackageReference Include="Microsoft.Maui.Controls.Maps" Version="9.0.30" />
      <PackageReference Include="Plugin.InAppBilling" Version="8.0.5" />
      <PackageReference Include="Sentry.Maui" Version="5.0.1" />
      <!--Sentry.Profiling 4.10.0 is not supported on Android-->
      <PackageReference Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) != 'android'" Include="Sentry.Profiling" Version="5.0.1" />
      <PackageReference Include="SixLabors.ImageSharp" Version="3.1.6" />
      <PackageReference Include="SkiaSharp" Version="3.118.0-preview.2.3" />
      <PackageReference Include="System.Text.Encodings.Web" Version="9.0.1" />
   </ItemGroup>

  <!-- Build Properties must be defined within these property groups to ensure successful publishing
       to the Mac App Store. See: https://aka.ms/maui-publish-app-store#define-build-properties-in-your-project-file -->
   <PropertyGroup Condition="$(TargetFramework.Contains('-maccatalyst')) and '$(Configuration)' == 'Debug'">
      <CodesignEntitlements>Platforms/MacCatalyst/Entitlements.Debug.plist</CodesignEntitlements>
   </PropertyGroup>

   <PropertyGroup Condition="$(TargetFramework.Contains('-maccatalyst')) and '$(Configuration)' == 'Release'">
      <CodesignEntitlements>Platforms/MacCatalyst/Entitlements.Release.plist</CodesignEntitlements>
      <UseHardenedRuntime>true</UseHardenedRuntime>
   </PropertyGroup>

  <!-- Sentry setup for PDB Upload -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release' and '$(SENTRY_UPLOAD)' == 'true' and $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android' and '$(DIVISIBILL_SENTRY_DSN)' != ''">

    <!-- Configure Sentry org and project -->
    <SentryOrg>autoplus</SentryOrg>
    <SentryProject>divisibill</SentryProject>

    <!-- Sends symbols to Sentry, enabling symbolic stack traces. -->
    <SentryUploadSymbols>true</SentryUploadSymbols>

  </PropertyGroup>

  <!--Generate the file holding the build secrets on every build-->
  <!--First get the secrets from environment variables-->
  <PropertyGroup>
    <DivisiBillWsUri Condition="$(Configuration) == release">$(DIVISIBILL_WS_URI_RELEASE)</DivisiBillWsUri>
    <DivisiBillWsUri Condition="'$(DivisiBillWsUri)' == ''">$(DIVISIBILL_WS_URI)</DivisiBillWsUri>

    <DivisiBillWsKey Condition="$(Configuration) == release">$(DIVISIBILL_WS_KEY_RELEASE)</DivisiBillWsKey>
    <DivisiBillWsKey Condition="'$(DivisiBillWsKey)' == ''">$(DIVISIBILL_WS_KEY)</DivisiBillWsKey>
    <BuildInfoText>
<![CDATA[
// <auto-generated/>
// THIS FILE IS GENERATED BY EACH BUILD - DO NOT EDIT IT
namespace DivisiBill.Generated
{
    internal class BuildInfo
    {
        internal const string DivisiBillWsUri = "$(DivisiBillWsUri)"%3b
        internal const string DivisiBillWsKey = "$(DivisiBillWsKey)"%3b
        internal const string DivisiBillAlternateWsUri = "$(DIVISIBILL_ALTERNATE_WS_URI)"%3b
        internal const string DivisiBillAlternateWsKey = "$(DIVISIBILL_ALTERNATE_WS_KEY)"%3b
        internal const string DivisiBillSentryDsn = "$(DIVISIBILL_SENTRY_DSN)"%3b
        internal const string DivisiBillBingMapsSecret = "$(DIVISIBILL_BING_MAPS_SECRET)"%3b
        internal const string DivisiBillTestProJsonB64 = "$(DIVISIBILL_TEST_PRO_JSON_B64)"%3b
        internal const string DivisiBillTestOcrJsonB64 = "$(DIVISIBILL_TEST_OCR_JSON_B64)"%3b
    }
}
]]>
    </BuildInfoText>
  </PropertyGroup>

  <Target Name="AddBuildInfo" Inputs="$(MSBuildAllProjects)" BeforeTargets="BeforeBuild;CoreCompile" Outputs="ForceBuildEveryTime">
    <Message Text="AddBuildInfo was invoked for file $(BuildInfoFilePath)" Importance="low" />
    <PropertyGroup>
      <BuildInfoFilePath>$(IntermediateOutputPath)BuildGenerated\BuildInfo.g.cs</BuildInfoFilePath>
    </PropertyGroup>
    <ItemGroup>
      <Compile Include="$(BuildInfoFilePath)" />
      <FileWrites Include="$(BuildInfoFilePath)" />
    </ItemGroup>
    <WriteLinesToFile Lines="$(BuildInfoText)" File="$(BuildInfoFilePath)" Overwrite="true" />
  </Target>
  <!--End file generation-->

  <!--Generate the file holding the build timestamp, this changes on every build-->
  <PropertyGroup>
    <Today>$([System.DateTime]::UtcNow.ToString("O"))</Today>
    <BuildEnvironmentText>
<![CDATA[
// <auto-generated/>
// THIS FILE IS GENERATED BY EACH BUILD - DO NOT EDIT IT
namespace DivisiBill.Generated
{
    internal static class BuildEnvironment
    {
        internal const string BuildTimeString = "$(Today)"%3b
    }
}
]]>
    </BuildEnvironmentText>
  </PropertyGroup>

  <Target Name="AddBuildEnvironment" BeforeTargets="BeforeBuild;CoreCompile" Inputs="$(MSBuildAllProjects)" Outputs="ForceBuildEveryTime">
    <Message Text="AddBuildEnvironment was invoked for file $(BuildInfoFilePath)" Importance="low" />
    <PropertyGroup>
      <BuildEnvironmentFilePath>$(IntermediateOutputPath)BuildGenerated\BuildEnvironment.g.cs</BuildEnvironmentFilePath>
    </PropertyGroup>
    <ItemGroup>
      <Compile Include="$(BuildEnvironmentFilePath)" />
      <FileWrites Include="$(BuildEnvironmentFilePath)" />
    </ItemGroup>
    <WriteLinesToFile Lines="$(BuildEnvironmentText)" File="$(BuildEnvironmentFilePath)" Overwrite="true" />
  </Target>
  <!--End file generation-->

</Project>
